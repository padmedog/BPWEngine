<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>current = 0;
pause = false;
hasved = false;
prevpause = pause;
trigger = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if pause
{
    if keyboard_check_pressed(vk_left) || keyboard_check_pressed(ord("A"))
        || (mouse_check_button_pressed(mb_left) &amp;&amp; mouse_x &lt; (room_width/2)-64)
    {
        current += 1;
        if current &gt; 3 current = 0;
        audio_play_sound(choose(snd_sounddown,snd_soundup),10,false);
    }
    if keyboard_check_pressed(vk_right) || keyboard_check_pressed(ord("D"))
        || (mouse_check_button_pressed(mb_left) &amp;&amp; mouse_x &gt; (room_width/2)+64)
    {
        current -= 1;
        if current &lt; 0 current = 3;
        audio_play_sound(choose(snd_sounddown,snd_soundup),10,false);
    }
    if keyboard_check_pressed(vk_enter) || (mouse_check_button_pressed(mb_left)
        &amp;&amp; mouse_x &gt; (room_width/2)-64 &amp;&amp; mouse_x &lt; (room_width/2)+64)
    {
        switch(current)
        {
            case 0:
                room_goto(rm_lvl1);
                break;
            case 2:
                trigger = true;
                break;
            case 1:
                game_end();
                break;
            case 3:
                room_goto(rm_menu);
                break;
        }
    }
    if !audio_is_playing(snd_machinehum)
    {
        audio_play_sound(snd_machinehum,11,false);
    }
}
else if audio_is_playing(snd_machinehum) audio_stop_sound(snd_machinehum);
if pause window_set_cursor(cr_default); else window_set_cursor(cr_none);
if keyboard_check_pressed(vk_escape) || trigger == true
{
   pause = !pause;
   window_mouse_set(window_get_width()/2,window_get_height()/2);
   trigger = false;
}
if pause obj_player.can_look = false; else obj_player.can_look = true;
/*if prevpause != pause
{
    window_mouse_set(window_get_width()/2,window_get_height()/2);
}
prevpause = pause;*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>window_set_cursor(cr_none);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if pause
{
    var col = draw_get_color();
    draw_set_color(c_lime);
    draw_set_halign(fa_center);
    draw_set_font(fnt_code);
    //obj_player.can_look = true;
    hasved = true;
    switch(current)
    {
        case 0:
/*            draw_text(window_get_width()/2,window_get_height()/2
                ,"QUIT|--&gt;RESTART&lt;--|MENU");*/
            draw_menu("RESUME","QUIT","RESTART","MENU","RESUME",0);
            break;
        case 1:
/*            draw_text(window_get_width()/2,window_get_height()/2
                ," RESUME|--&gt;QUIT&lt;--|RESTART");*/
            draw_menu("MENU","RESUME","QUIT","RESTART","MENU",0);
            break;
        case 2:
/*            draw_text(window_get_width()/2,window_get_height()/2
                ,"MENU|--&gt;RESUME&lt;--|QUIT");*/
            draw_menu("RESTART","MENU","RESUME","QUIT","RESTART",0);
            break;
        case 3:
/*            draw_text(window_get_width()/2,window_get_height()/2
                ,"RESTART|--&gt;MENU&lt;--|RESUME ");*/
            draw_menu("QUIT","RESTART","MENU","RESUME","QUIT",0);
    }
    draw_set_color(col);
} else if hasved
{/*obj_player.can_look = false;*/ hasved = false;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
