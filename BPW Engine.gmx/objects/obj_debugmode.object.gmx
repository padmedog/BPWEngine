<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>debugging = false;
xpos = 0;
ypos = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_pressed(vk_f3) debugging = !debugging;
if debugging &amp;&amp; inLevel()
{
    xpos += (keyboard_check_pressed(vk_numpad6)-keyboard_check_pressed(vk_numpad4))/10;
    ypos += (keyboard_check_pressed(vk_numpad2)-keyboard_check_pressed(vk_numpad8))/10;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if debugging
{
    var inlvl = inLevel();
    if inlvl
    {
        d3d_set_fog(false,c_black,0,0);
        d3d_end();
    }
    draw_set_font(fnt_code);
    var col = draw_get_color();
    draw_set_color(c_white);
    draw_set_halign(fa_left);
    var current1 = currentLevel();
    var current2 = currentMenu();
    switch(room)
    {
        case current1:
            if obj_gameoptions.dozenalnumbers == false
            {
                draw_text(0,0,"player x: " + string(obj_player.x));
                draw_text(0,20,"player y: " + string(obj_player.y));
                draw_text(0,40,"player z: " + string(obj_player.z));
                draw_text(0,60,"player direction: " + string(obj_player.dir));
                draw_text(0,80,"player pitch: " + string(obj_player.pit));
                draw_text(0,100,"player request dir: " + string(obj_player.rdir));
                draw_text(0,120,"player request pit: " + string(obj_player.rpit));
                draw_text(0,140,"paused: " + boolToString(obj_pause.pause));
                draw_text(0,160,"dozenal off");
                draw_text(0,180,"fps/real: " + string(fps) + " , " + string(fps_real));
                draw_text(0,200,"text XY: " + string(xpos) + " , " + string(ypos));
                draw_text(0,220,"shake XY: " + string(obj_screenshake.x) + " , " + string(obj_screenshake.y));
                draw_text(0,240,"fog_enabled: " + boolToString(obj_control.fog_enabled));
                draw_text(0,260,"fog_start: " + string(obj_control.fog_start));
                draw_text(0,280,"fog_end: " + string(obj_control.fog_end));
            }
            else
            {
                draw_text(0,0,"player x: " + toBase(obj_player.x,12));
                draw_text(0,20,"player y: " + toBase(obj_player.y,12));
                draw_text(0,40,"player z: " + string(obj_player.z));
                draw_text(0,60,"player direction: " + toBase(obj_player.dir,12));
                draw_text(0,80,"player pitch: " + toBase(obj_player.pit,12));
                draw_text(0,100,"player request dir: " + toBase(obj_player.rdir,12));
                draw_text(0,120,"player request pit: " + toBase(obj_player.rpit,12));
                draw_text(0,140,"paused: " + boolToString(obj_pause.pause));
                draw_text(0,160,"dozenal on");
                draw_text(0,180,"fps/real: " + toBase(fps,12) + " , " + toBase(fps_real,12));
                draw_text(0,200,"text XY: " + toBase(xpos,12) + " , " + toBase(ypos,12));
                draw_text(0,220,"shake XY: " + toBase(obj_screenshake.x,12) + " , " + toBase(obj_screenshake.y,12));
                draw_text(0,240,"fog_enabled: " + boolToString(obj_control.fog_enabled));
                draw_text(0,260,"fog_start: " + toBase(obj_control.fog_start,12));
                draw_text(0,280,"fog_end: " + toBase(obj_control.fog_end,12));
            }
            break;
        case current2:
            draw_text(0,0,"fullscreen: " + boolToString(window_get_fullscreen()));
            draw_text(0,20,"dozenal: " + boolToString(obj_gameoptions.dozenalnumbers));
            break;
    }
    draw_set_color(col);
    if inlvl
    {
        d3d_start();
        d3d_set_fog(obj_control.fog_enabled,obj_control.fog_color
            ,obj_control.fog_start,obj_control.fog_end);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
